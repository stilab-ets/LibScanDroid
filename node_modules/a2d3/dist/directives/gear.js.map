{"version":3,"sources":["../../src/angularD3/directives/gear.ts"],"names":[],"mappings":"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","file":"gear.js","sourceRoot":"","sourcesContent":["import { Input, Optional, Directive, ElementRef } from '@angular/core';\nimport { D3ChartDirective, D3Element, D3MarginDirective } from './chart';\nimport * as d3 from 'd3';\n\n\nexport class D3GearDirective extends D3Element {\n   duration;\n   transition;\n  name: string;\n   weightField: string;\n   color: string;\n   innerLabelField: string;\n   innerRadiusField: string;\n   innerLabelRadiusField: string;\n   outerLabelField: string;\n   outerRadiusField: string;\n   outerLabelRadiusField: string;\n   anglePadding = 0;\n   cornerRadiusPercentage = 0;\n   triangleColor: string;\n   format: string;\n   radiusScaling = .9;\n   innerRadiusScaling = 0.3;\n   rotation = 0;\n   dx = 0;\n   dy = 0;\n  layout;\n\n  private _colorScale;\n\n  constructor(chart: D3ChartDirective, el: ElementRef,  margin?: D3MarginDirective) {\n    super(chart, el, margin);\n    this.element.attr('class', 'gear');\n  }\n\n  \n  get colorScale(): any {\n    return this._colorScale;\n  }\n\n  set colorScale(value: any) {\n    if (d3.scale[value]) {\n      this._colorScale = d3.scale[value]();\n    }\n  }\n\n  redraw() {\n    const baseRadius = this.height * 0.5 * this.radiusScaling;\n    const data = this.data;\n\n    if (this.width > 0 && this.height > 0) {\n      this.chart.width = this.width;\n      this.chart.height = this.height;\n    }\n\n    if (this.chart.width === 0 || this.chart.height === 0) {\n      return;\n    }\n\n    let xcenter = this.chart.width / 2 + (+this.dx);\n    const ycenter = this.chart.height / 2 + (+this.dy);\n\n    let startAngle = 0;\n    let endAngle = 2 * Math.PI;\n\n    if (this.format === 'half-left') {\n      startAngle = Math.PI;\n      xcenter = this.chart.width;\n    } else if (this.format === 'half-right') {\n      endAngle = Math.PI;\n      xcenter = 0;\n    } else { // rotation only works on non half formats\n      const rotationInRadians = this.rotation * Math.PI / 180;\n      startAngle = rotationInRadians;\n      endAngle = rotationInRadians + 2 * Math.PI;\n    }\n\n    this.element.attr('transform', `translate(${xcenter}, ${ycenter})`);\n\n    const pieData = d3.layout.pie()\n      .startAngle(startAngle)\n      .endAngle(endAngle)\n      .padAngle(this.anglePadding)\n      .sort(null)\n      .value(d => d[this.weightField])(data);\n\n    const layoutData = [];\n\n    for (const i in data) {\n      const d = data[i];\n      const pd = pieData[i];\n\n      if (pd.startAngle < 0) {\n        pd.startAngle += 2 * Math.PI;\n      }\n\n      if (pd.endAngle < 0) {\n        pd.endAngle -= 2 * Math.PI;\n      }\n\n      let midAngleRadians = ((pd.startAngle + pd.endAngle) / 2) - Math.PI / 2;\n\n      if (midAngleRadians < 0) {\n        midAngleRadians += 2 * Math.PI;\n      }\n\n      const midAngleDegrees = 180 * midAngleRadians / Math.PI;\n      const uy = Math.sin(midAngleRadians);\n      const ux = Math.cos(midAngleRadians);\n      const halfPi = Math.PI / 2;\n      const lr = midAngleRadians > halfPi && midAngleRadians < 3 * halfPi;\n\n      let innerR = this.innerRadiusScaling * baseRadius;\n      if (this.innerRadiusField && d[this.innerRadiusField]) {\n        innerR = +d[this.innerRadiusField] * baseRadius;\n      }\n\n      let outerR = baseRadius;\n      if (this.outerRadiusField && d[this.outerRadiusField]) {\n        outerR = +d[this.outerRadiusField] * baseRadius;\n      }\n\n      let innerLR = (innerR + outerR) / 2;\n\n      if (this.innerLabelRadiusField && d[this.innerLabelRadiusField]) {\n        innerLR = +d[this.innerLabelRadiusField] * baseRadius;\n      }\n\n      const gapSize = 0.02 * baseRadius;\n      const triStart = outerR + gapSize;\n      const triEnd = triStart + 0.05 * baseRadius;\n      const triSize = triEnd - triStart;\n      let outerLR = triEnd + gapSize;\n      if (this.outerLabelRadiusField && d[this.outerLabelRadiusField]) {\n        outerLR = +d[this.outerLabelRadiusField] * baseRadius;\n      }\n      const arc = d3.svg.arc<number>()\n        .outerRadius(outerR)\n        .innerRadius(innerR)\n        .cornerRadius(baseRadius * this.cornerRadiusPercentage / 100.0);\n      const slicePath = arc(pd);\n\n      const tbx = triStart;\n      const tbw = triSize;\n      const outerLabelTrianglePath = `M ${tbx} ${-tbw} l 0 ${2 * tbw} l ${tbw} ${-tbw} z`;\n\n      layoutData[i] = {\n        index: i,\n        innerR: innerR,\n        innerLabel: d[this.innerLabelField],\n        innerLabelX: innerLR * ux,\n        innerLabelY: innerLR * uy,\n        innerLabelDy: '0.35em',\n        innerLabelAnchor: 'middle',\n        outerR: outerR,\n        outerLabel: d[this.outerLabelField],\n        outerLabelX: outerLR * ux,\n        outerLabelY: outerLR * uy,\n        outerLabelAnchor: lr ? 'end' : 'start',\n        outerLabelDy: `${((uy + 1) / 2) * .7}em`,\n        midDegrees: midAngleDegrees,\n        pd: pd,\n        arc: arc,\n        slicePath: slicePath,\n        outerLabelTrianglePath: outerLabelTrianglePath,\n      };\n    }\n\n    const slices = this.element.selectAll('path.gear').data(layoutData);\n    slices\n      .enter()\n      .append('path')\n      .attr('class', (d, i) => `gear gear-${i}`)\n      .attr('d', (d, i) => d.slicePath)\n      .attr('fill', (d, i) => this.getColors(d, i));\n\n    slices.exit().remove();\n\n    const triangles = this.element.selectAll('path.gear-label-triangle').data(layoutData);\n    triangles\n      .enter()\n      .append('path')\n      .attr('class', (d, i) => `gear-label-triangle gear-label-triangle-${i}`)\n      .attr('transform', d => `rotate(${d.midDegrees})`)\n      .attr('d', d => d.outerLabelTrianglePath)\n      .attr('fill', this.triangleColor || 'grey');\n\n    const innerLabel = this.element.selectAll('text.gear-label-inner').data(layoutData);\n    innerLabel.enter()\n      .append('text')\n      .attr('class', (d, i) => `gear-label-inner gear-label-inner-${i}`)\n      .attr('text-anchor', d => d.innerLabelAnchor)\n      .attr('dy', d => d.innerLabelDy)\n      .attr('transform', d => `translate(${d.innerLabelX}, ${d.innerLabelY})`)\n      .text(d => d.innerLabel);\n\n    innerLabel.exit().remove();\n\n    const outerLabel = this.element.selectAll('text.gear-label-outer').data(layoutData);\n    outerLabel.enter()\n      .append('text')\n      .attr('class', (d, i) => `gear-label-outer gear-label-outer-${i}`)\n      .attr('text-anchor', d => d.outerLabelAnchor)\n      .attr('class', (d, i) => `gear-label-outer gear-label-outer-${i}`)\n      .attr('dy', d => d.outerLabelDy)\n      .attr('transform', d => `translate(${d.outerLabelX}, ${d.outerLabelY})`)\n      .text(d => d.outerLabel);\n\n    outerLabel.exit().remove();\n\n    this.layout = layoutData;\n  }\n\n  private getColors(d, i) {\n    if (this.colorScale) {\n      return this.colorScale(i);\n    }\n\n    if (this.color) {\n      return d[this.color];\n    }\n\n    if (d.color) {\n      return d.color;\n    }\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n  selector: '[d3-gear]'\n}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: D3ChartDirective, },\n{type: ElementRef, },\n{type: D3MarginDirective, decorators: [{ type: Optional }, ]},\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'duration': [{ type: Input },],\n'transition': [{ type: Input },],\n'weightField': [{ type: Input, args: ['weight-field', ] },],\n'color': [{ type: Input },],\n'innerLabelField': [{ type: Input, args: ['inner-label-field', ] },],\n'innerRadiusField': [{ type: Input, args: ['inner-radius-field', ] },],\n'innerLabelRadiusField': [{ type: Input, args: ['inner-label-radius-field', ] },],\n'outerLabelField': [{ type: Input, args: ['outer-label-field', ] },],\n'outerRadiusField': [{ type: Input, args: ['outer-radius-field', ] },],\n'outerLabelRadiusField': [{ type: Input, args: ['outer-label-radius-field', ] },],\n'anglePadding': [{ type: Input, args: ['angle-padding', ] },],\n'cornerRadiusPercentage': [{ type: Input, args: ['corner-radius-percentage', ] },],\n'triangleColor': [{ type: Input, args: ['triangle-color', ] },],\n'format': [{ type: Input },],\n'radiusScaling': [{ type: Input, args: ['radius-scaling', ] },],\n'innerRadiusScaling': [{ type: Input, args: ['inner-radius-scaling', ] },],\n'rotation': [{ type: Input },],\n'dx': [{ type: Input },],\n'dy': [{ type: Input },],\n'colorScale': [{ type: Input, args: ['color-scale', ] },],\n};\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}