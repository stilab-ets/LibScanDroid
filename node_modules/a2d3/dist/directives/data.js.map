{"version":3,"sources":["../../src/angularD3/directives/data.ts"],"names":[],"mappings":"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","file":"data.js","sourceRoot":"","sourcesContent":["import { Directive, Input, Output, EventEmitter, AfterContentInit } from '@angular/core';\nimport * as d3 from 'd3';\n\n\nexport class D3DataDirective implements AfterContentInit {\n   accessor: (row: {[key: string]: string }) => {};\n   callback: (rows: any[]) => void;\n   data = new EventEmitter();\n\n  private _d3Data: D3DataService;\n  private _src: string;\n  private _initialized = false;\n\n  constructor() {\n    this._d3Data = new D3DataService();\n  }\n\n  defaultFilter(row: {}): {} {\n    for (const key in row) {\n      const value = row[key];\n\n      if (!isNaN(parseFloat(value)) && isFinite(value)) {\n        row[key] = +value.trim();\n      }\n\n      return row;\n    }\n  }\n\n  \n  get src(): string {\n    return this._src;\n  }\n  set src(value: string) {\n    this._src = value;\n\n    if (this._initialized && this._src && this.src.length > 0) {\n      this.fetch();\n    }\n  }\n\n  fetch() {\n    if (!this._src) {\n      throw new Error('No src url given');\n    }\n\n    this._d3Data.csv(this._src, this.accessor || this.defaultFilter, this.callback)\n      .then(rows => {\n        this.data.next({ rows: rows });\n      })\n      .catch(() => {\n        throw new Error('Error loading CSV via D3');\n      });\n  }\n\n  ngAfterContentInit() {\n    this._initialized = true;\n    this.fetch();\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n  selector: 'd3-data'\n}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'accessor': [{ type: Input },],\n'callback': [{ type: Input },],\n'data': [{ type: Output },],\n'src': [{ type: Input },],\n};\n}\n\nexport interface Cache {\n  get(key: string);\n  put(key: string, value: any);\n}\n\nexport class DefaultCache {\n  store = {};\n\n  get(key: string) {\n    return this.store[key];\n  }\n\n  put(key: string, value: any) {\n    this.store[key] = value;\n  }\n}\n\nexport class D3DataService {\n  cache: Cache;\n\n  constructor() {\n    this.cache = new DefaultCache();\n  }\n\n  csv(src, accessor?: (row: {[key: string]: string }) => {}, callback?: (rows: any[]) => void) {\n    return new Promise((resolve, reject) => {\n      const cached = this.cache.get(src);\n\n      if (cached) {\n        if (callback) {\n          callback(cached);\n        }\n\n        resolve(cached);\n      }\n\n      d3.csv(src, accessor, (rows) => {\n        if (callback) {\n          callback(rows);\n        }\n\n        if (rows) {\n          this.cache.put(src, rows);\n          resolve(rows);\n        } else {\n          reject();\n        }\n      });\n    });\n  }\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}