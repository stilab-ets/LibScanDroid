{"version":3,"sources":["../../src/angularD3/directives/axis-label.ts"],"names":[],"mappings":"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","file":"axis-label.js","sourceRoot":"","sourcesContent":["import { Input, Optional, Directive, ElementRef } from '@angular/core';\nimport { D3ChartDirective, D3Element, D3MarginDirective } from './chart';\n\n\nexport class D3AxisLabelDirective extends D3Element {\n   value: string;\n   axis: string;\n   position: string = 'left';\n   xPadding: string = '0';\n   yPadding: string = '0';\n\n  private _scale: any;\n  private _textElement;\n  private _xPadding: number;\n  private _yPadding: number;\n  private _label: string;\n\n  constructor(chart: D3ChartDirective, el: ElementRef,  margin?: D3MarginDirective) {\n    super(chart, el, margin);\n    chart.addElement(this);\n  }\n\n  redraw() {\n    this.updateLabel();\n  }\n\n  \n  get label(): string {\n    return this._label;\n  }\n\n  set label(value: string) {\n    this._label = value;\n    if (this._textElement) {\n      this._textElement.text(this._label);\n    }\n  }\n\n  private updateLabel() {\n    if (!this._textElement) {\n      this._textElement = this.element.append('text').attr('class', 'axis-label');\n      this._textElement.text(this.label);\n    }\n    if (!this._scale) {\n      this._scale = this.getScale(this.axis);\n    }\n    if (!this._xPadding) {\n      this._xPadding = parseFloat(this.xPadding);\n    }\n    if (!this._yPadding) {\n      this._yPadding = parseFloat(this.yPadding);\n    }\n    let isVertical = this._scale.isVertical();\n\n    let x = this._xPadding;\n    let y = this._yPadding;\n    let scaledValue = this._scale.scale(this.value);\n\n    if (isVertical) {\n      this._textElement\n          .attr('transform', 'rotate(-90)');\n      if (this.position === 'middle') {\n        x += -this.height / 2;\n        y += scaledValue;\n      } else if (this._scale.orientation === 'top' && this.position === 'start'\n          || this._scale.orientation === 'bottom' && this.position === 'end') {\n        this._textElement\n            .attr('style', 'text-anchor: end');\n        y += scaledValue;\n      } else {\n        x += -this.height;\n        y += scaledValue;\n      }\n    } else {\n      if (this.position === 'middle') {\n        x += this.width / 2;\n        y += scaledValue;\n      } else if (this._scale.orientation === 'left' && this.position === 'start'\n          || this._scale.orientation === 'right' && this.position === 'end') {\n        y += scaledValue;\n      } else {\n        x += this.width;\n        y += scaledValue;\n        this._textElement.attr('style', 'text-anchor: end');\n      }\n    }\n\n    this._textElement\n      .attr('x', x)\n      .attr('y', y);\n  }\n\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n  selector: '[d3-axis-label]'\n}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: D3ChartDirective, },\n{type: ElementRef, },\n{type: D3MarginDirective, decorators: [{ type: Optional }, ]},\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'value': [{ type: Input },],\n'axis': [{ type: Input },],\n'position': [{ type: Input },],\n'xPadding': [{ type: Input, args: ['x-padding', ] },],\n'yPadding': [{ type: Input, args: ['y-padding', ] },],\n'label': [{ type: Input },],\n};\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}