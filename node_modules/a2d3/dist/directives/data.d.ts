import { EventEmitter, AfterContentInit } from '@angular/core';
export declare class D3DataDirective implements AfterContentInit {
    accessor: (row: {
        [key: string]: string;
    }) => {};
    callback: (rows: any[]) => void;
    data: EventEmitter<{}>;
    private _d3Data;
    private _src;
    private _initialized;
    constructor();
    defaultFilter(row: {}): {};
    src: string;
    fetch(): void;
    ngAfterContentInit(): void;
}
export interface Cache {
    get(key: string): any;
    put(key: string, value: any): any;
}
export declare class DefaultCache {
    store: {};
    get(key: string): any;
    put(key: string, value: any): void;
}
export declare class D3DataService {
    cache: Cache;
    constructor();
    csv(src: any, accessor?: (row: {
        [key: string]: string;
    }) => {}, callback?: (rows: any[]) => void): Promise<{}>;
}
