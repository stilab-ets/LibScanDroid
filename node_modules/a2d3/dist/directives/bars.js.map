{"version":3,"sources":["../../src/angularD3/directives/bars.ts"],"names":[],"mappings":"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","file":"bars.js","sourceRoot":"","sourcesContent":["import { Input, Optional, Directive, ElementRef } from '@angular/core';\nimport { D3ChartDirective, D3Element, D3Scale, D3MarginDirective } from './chart';\nimport * as d3 from 'd3';\n\n\nexport class D3BarsDirective extends D3Element {\n   name: string;\n   barWidth = 15;\n   xDataName: string;\n   yDataName: string;\n   xScaleName: string;\n   yScaleName: string;\n\n  private _barsElement;\n  private _xScale: D3Scale;\n  private _yScale: D3Scale;\n\n  constructor(chart: D3ChartDirective, el: ElementRef,  margin?: D3MarginDirective) {\n    super(chart, el, margin);\n    this._barsElement = this.element.attr('class', 'bars');\n  }\n\n  redraw() {\n    const data = this.data;\n    const bars = this._barsElement.selectAll('rect.bar').data(data);\n\n    bars.exit().transition().duration(500)\n      .attr('y', () => this.height)\n      .attr('height', 0)\n      .remove();\n\n    bars.transition().duration(500)\n      .attr('x', (d: any) => this.x(d[this.xDataName]) - this.barWidth / 2)\n      .attr('y', (d: any) => this.y(d[this.yDataName]))\n      .attr('height', (d: any) => this.height - this.y(d[this.yDataName]))\n      .attr('width', this.barWidth);\n\n    bars.enter()\n      .append('rect')\n      .attr('class', (d, i) => `bar bar-${i}`)\n      .attr('x', (d: any) => this.x(d[this.xDataName]) - this.barWidth / 2)\n      .attr('y', () => this.height)\n      .attr('height', 0)\n      .attr('width', this.barWidth)\n      .transition().duration(500)\n      .attr('y', (d: any) => this.y(d[this.yDataName]))\n      .attr('height', (d: any) => this.height - this.y(d[this.yDataName]));\n  }\n\n  private get x() {\n    return (this._xScale = this._xScale\n      || this.getScale(this.xScaleName || this.xDataName)).scale;\n  }\n\n  private get y() {\n    return (this._yScale = this._yScale\n      || this.getScale(this.yScaleName || this.yDataName)).scale;\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n  selector: '[d3-bars]'\n}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: D3ChartDirective, },\n{type: ElementRef, },\n{type: D3MarginDirective, decorators: [{ type: Optional }, ]},\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'name': [{ type: Input },],\n'barWidth': [{ type: Input, args: ['width', ] },],\n'xDataName': [{ type: Input, args: ['x', ] },],\n'yDataName': [{ type: Input, args: ['y', ] },],\n'xScaleName': [{ type: Input, args: ['xscale', ] },],\n'yScaleName': [{ type: Input, args: ['yscale', ] },],\n};\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}