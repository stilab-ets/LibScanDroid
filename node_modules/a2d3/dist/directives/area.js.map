{"version":3,"sources":["../../src/angularD3/directives/area.ts"],"names":[],"mappings":"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","file":"area.js","sourceRoot":"","sourcesContent":["import { Input, Optional, Directive, ElementRef } from '@angular/core';\nimport { D3ChartDirective, D3Element, D3Scale, D3MarginDirective } from './chart';\nimport * as d3 from 'd3';\n\n\nexport class D3AreaDirective extends D3Element {\n   name: string;\n   vertical: boolean;\n   xDataName: string;\n   yDataName: string;\n   yScaleName: string;\n   xScaleName: string;\n   offset: any;\n   stroke;\n\n  private _areaElement;\n  private _columns;\n  private _xScale: D3Scale;\n  private _yScale: D3Scale;\n\n  constructor(chart: D3ChartDirective, el: ElementRef,  margin?: D3MarginDirective) {\n    super(chart, el, margin);\n    this._areaElement = this.element.attr('class', 'area');\n  }\n\n  \n  get columns() {\n    if (this._columns) {\n      return this._columns;\n    } else {\n      return [this.yDataName];\n    }\n  }\n  set columns(value) {\n    if (value instanceof String) {\n      value = value.split(',').map(v => v.trim());\n    }\n\n    if (Array.isArray(value)) {\n      this._columns = value;\n      this.redraw();\n    }\n  }\n\n  redraw() {\n    const data = this.data;\n    const stack = d3.layout.stack();\n\n    if (this.offset) {\n      stack.offset(this.offset);\n    }\n\n    stack.values((d: any) => d.values);\n\n    const stackedData = stack(this.mapColumns(data));\n\n    const area = this.getArea();\n    const nullArea = this.getNullArea();\n    const elements = this._areaElement.selectAll('path.area').data(stackedData);\n    elements.enter()\n      .append('path').attr('class', d => `area area-${d.name}`)\n      .attr('d', nullArea);\n\n    elements.transition().duration(500)\n      .attr('class', d => `area area-${d.name}`)\n      .attr('d', area);\n\n    elements.exit()\n      .transition().duration(500)\n      .attr('d', nullArea)\n      .remove();\n  }\n\n  private getNullArea() {\n    const area = d3.svg.area<any>()\n      .x((d, i) => this.x(d.x))\n      .y0(() => this.height)\n      .y1(() => this.height);\n\n    const areaStacked = d3.svg.area<any>()\n      .x(d => this.x(d.x))\n      .y0(d => this.y(d.y0))\n      .y1(d => this.y(d.y0));\n\n    return (d, i) => {\n      if (i === 0) {\n        return area(d.values);\n      } else {\n        return areaStacked(d.values);\n      }\n    };\n  }\n\n  private getArea() {\n    let area;\n    let areaStacked;\n\n    if (this.vertical) {\n      area = d3.svg.area<any>()\n        .y(d => this.x(d.x))\n        .x0(0)\n        .x1(d => this.y(d.y));\n\n      areaStacked = d3.svg.area<any>()\n        .y(d => this.x(d.x))\n        .x0(d => this.y(d.y0))\n        .x1(d => this.y(d.y + d.y0));\n    } else {\n      area = d3.svg.area<any>()\n        .x(d => this.x(d.x))\n        .y0(() => this.height)\n        .y1(d => this.y(d.y));\n\n      areaStacked = d3.svg.area<any>()\n        .x(d => this.x(d.x))\n        .y0(d => this.y(d.y0))\n        .y1(d => this.y(d.y + d.y0));\n    }\n\n    return (d, i) => {\n      if (i === 0) {\n        return area(d.values);\n      } else {\n        return areaStacked(d.values);\n      }\n    };\n  }\n\n  private mapColumns(data) {\n    return this.columns.map(c => ({\n      name: c,\n      values: this.mapValues(data, c)\n    }));\n  }\n\n  private mapValues(data, c) {\n    return data.map(d => ({\n      x: d[this.xDataName],\n      y: d[c]\n    }));\n  }\n\n  private get x() {\n    return (this._xScale = this._xScale\n      || this.getScale(this.xScaleName || this.xDataName)).scale;\n  }\n\n  private get y() {\n    return (this._yScale = this._yScale\n      || this.getScale(this.yScaleName || this.yDataName)).scale;\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n  selector: '[d3-area]'\n}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: D3ChartDirective, },\n{type: ElementRef, },\n{type: D3MarginDirective, decorators: [{ type: Optional }, ]},\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'name': [{ type: Input },],\n'vertical': [{ type: Input },],\n'xDataName': [{ type: Input, args: ['x', ] },],\n'yDataName': [{ type: Input, args: ['y', ] },],\n'yScaleName': [{ type: Input, args: ['yscale', ] },],\n'xScaleName': [{ type: Input, args: ['xscale', ] },],\n'offset': [{ type: Input },],\n'stroke': [{ type: Input },],\n'columns': [{ type: Input },],\n};\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}