var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
import { Input, Optional, Directive, ElementRef } from '@angular/core';
import { D3ChartDirective, D3MarginDirective } from './chart';
import { D3PieBase } from './pie';
import * as d3 from 'd3';
var D3ArcDirective = (function (_super) {
    __extends(D3ArcDirective, _super);
    function D3ArcDirective(chart, el, margin) {
        var _this = _super.call(this, chart, el, margin) || this;
        _this.transition = 'ease';
        _this.duration = 500;
        _this.value = 'value';
        _this.label = 'label';
        _this.dy = '0.35em';
        _this.textAnchor = 'middle';
        _this.innerRadius = 0.6;
        _this.labelRadius = 0;
        _this._center = d3.select(el.nativeElement).attr('class', 'arc');
        _this._arc = _this._center.append('path').attr('class', 'arc');
        _this._label = _this._center.append('text').attr('class', 'arc-label');
        return _this;
    }
    D3ArcDirective.prototype.redraw = function () {
        _super.prototype.redraw.call(this);
        var data = this.data;
        var radius = this.radius;
        var arc = this.createArc(radius);
        var arcTween = this.createArcTween(arc, 0);
        this._center.attr('transform', "translate(" + radius + "," + radius + ")");
        this._label.attr('dy', this.dy).style('text-anchor', 'middle').text(data[this.label]);
        this._arc.datum(data[this.value])
            .transition().ease(this.transition).duration(this.duration)
            .attrTween('d', arcTween);
    };
    D3ArcDirective.prototype.createArc = function (radius) {
        return _super.prototype.createArc.call(this, radius).startAngle(0)
            .endAngle(function (d) { return (d / 100) * 2 * Math.PI; });
    };
    return D3ArcDirective;
}(D3PieBase));
export { D3ArcDirective };
D3ArcDirective.decorators = [
    { type: Directive, args: [{
                selector: '[d3-arc]'
            },] },
];
D3ArcDirective.ctorParameters = function () { return [
    { type: D3ChartDirective, },
    { type: ElementRef, },
    { type: D3MarginDirective, decorators: [{ type: Optional },] },
]; };
D3ArcDirective.propDecorators = {
    'name': [{ type: Input },],
    'transition': [{ type: Input },],
    'duration': [{ type: Input },],
    'value': [{ type: Input },],
    'label': [{ type: Input },],
    'dy': [{ type: Input },],
    'textAnchor': [{ type: Input, args: ['text-anchor',] },],
    'innerRadius': [{ type: Input, args: ['inner-radius',] },],
    'labelRadius': [{ type: Input, args: ['label-radius',] },],
};
//# sourceMappingURL=arc.js.map